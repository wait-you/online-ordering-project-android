// Generated by view binder compiler. Do not edit!
package cn.wenhe9.order.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cn.wenhe9.order.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivFoodPic;

  @NonNull
  public final LinearLayout llInfo;

  @NonNull
  public final TextView tvCount;

  @NonNull
  public final TextView tvFoodName;

  @NonNull
  public final TextView tvMoney;

  private OrderItemBinding(@NonNull RelativeLayout rootView, @NonNull ImageView ivFoodPic,
      @NonNull LinearLayout llInfo, @NonNull TextView tvCount, @NonNull TextView tvFoodName,
      @NonNull TextView tvMoney) {
    this.rootView = rootView;
    this.ivFoodPic = ivFoodPic;
    this.llInfo = llInfo;
    this.tvCount = tvCount;
    this.tvFoodName = tvFoodName;
    this.tvMoney = tvMoney;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.order_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_food_pic;
      ImageView ivFoodPic = ViewBindings.findChildViewById(rootView, id);
      if (ivFoodPic == null) {
        break missingId;
      }

      id = R.id.ll_info;
      LinearLayout llInfo = ViewBindings.findChildViewById(rootView, id);
      if (llInfo == null) {
        break missingId;
      }

      id = R.id.tv_count;
      TextView tvCount = ViewBindings.findChildViewById(rootView, id);
      if (tvCount == null) {
        break missingId;
      }

      id = R.id.tv_food_name;
      TextView tvFoodName = ViewBindings.findChildViewById(rootView, id);
      if (tvFoodName == null) {
        break missingId;
      }

      id = R.id.tv_money;
      TextView tvMoney = ViewBindings.findChildViewById(rootView, id);
      if (tvMoney == null) {
        break missingId;
      }

      return new OrderItemBinding((RelativeLayout) rootView, ivFoodPic, llInfo, tvCount, tvFoodName,
          tvMoney);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
